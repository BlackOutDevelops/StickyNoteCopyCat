<Window x:Class="NoteTaker.NoteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NoteTaker"
        mc:Ignorable="d"
        x:Name="NotesWindow" Title="Note Taker" MinHeight="350" MinWidth="355" Height="350" Width="355" WindowStyle="None" AllowsTransparency="True" Background="Transparent" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" 
        Activated="HandleWindowActivated" Deactivated="HandleWindowDeactivated" StateChanged="HandleWindowStateChanged">
    <Window.Resources>
        <SolidColorBrush x:Key="ThemeColor" Color="#FF262626"/>
        <SolidColorBrush x:Key="AccentColor" Color="#FF414141"/>
        <SolidColorBrush x:Key="MainFontColor" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Enabled.Background" Color="#FF262626"/>
        <SolidColorBrush x:Key="Button.Enabled.Border" Color="#FF262626"/>
        <SolidColorBrush x:Key="Button.Enabled.Foreground" Color="#FFFFFFFF"/>
        <ControlTemplate x:Key="TextCustomizationButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Width="32" Height="32">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <!--<Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TextCustomizationButtonStyle" TargetType="{x:Type ToggleButton}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Width="32" Height="32">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>   
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#FF444444"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="Gray"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="Gray"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="LightGray"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="White"/>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButtonTop" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" Background="{StaticResource ScrollBar.Static.Background}" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButtonBottom" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" Background="{StaticResource ScrollBar.Static.Background}" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" SnapsToDevicePixels="true" CornerRadius="0, 0, 7, 0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <!-- Change Row 0 and Row 2 to 0 to get rid of arrow buttons -->
                                <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                                <RowDefinition MaxHeight="{Binding ScrollBarArrowButtonHeight}"/>
                                <RowDefinition Height="0.00001*"/>
                                <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                                <RowDefinition MaxHeight="{Binding ScrollBarArrowButtonHeight}"/>
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButtonTop}">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <!-- Changed Width and Margin to match sticky note-->
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" Width="{Binding TrackWidth}" Margin="{Binding TrackMargin}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButtonBottom}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar Style="{DynamicResource ScrollBarStyle}" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Background="Transparent" Foreground="Gray" BorderThickness="0" MouseEnter="HandleMouseEnterScrollBar" MouseLeave="HandleMouseLeaveScrollBar"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Border x:Name="WindowBorder" Background="{StaticResource ThemeColor}" >
        <Grid x:Name="Griddy">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="38"/>
            </Grid.RowDefinitions>

            <!-- Window Thumbs -->
            <local:WindowThumbs Grid.RowSpan="3"/>

            <!-- Window Bar -->
            <local:WindowBar Grid.Row="0"/>

            <!-- Contents -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="ImageRow" Height="0"/>
                    <RowDefinition Height="6*"/>
                </Grid.RowDefinitions>
                
                <local:ImageHolder x:Name="ImageCarousel" Grid.Row="0" Foreground="White" Background="#FF303030" LayoutUpdated="HandleImageHolderLayoutUpdated"/>
                <RichTextBox Grid.Row="1" x:Name="NoteTextBox" AutoWordSelection="False" IsUndoEnabled="True" Foreground="White" Background="#FF303030" BorderThickness="0" VerticalScrollBarVisibility="Visible" FontSize="14" TextChanged="HandleTextChanged" PreviewTextInput="HandleTextInput" PreviewKeyDown="HandleKeyDown" Loaded="HandleTextBoxLoaded" SelectionChanged="HandleSelectionChanged" >
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}">
                            <Setter Property="Margin" Value="{Binding ScrollViewerMargin}"/>
                        </Style>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                        <Style TargetType="{x:Type List}">
                            <Setter Property="Padding" Value="15, 0, 0, 0"/>
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                        <Style TargetType="{x:Type ListItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </RichTextBox.Resources>
                </RichTextBox>
                
            </Grid>
            <ToolBar Grid.Row="2" HorizontalAlignment="Left" Background="Transparent" Foreground="Transparent" ToolBarTray.IsLocked="True" Loaded="HandleToolBarLoaded">
                <ToggleButton Style="{DynamicResource TextCustomizationButtonStyle}" Margin="2, 0, 0, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" IsChecked="{Binding IsBold, Mode=TwoWay}" Command="EditingCommands.ToggleBold">
                    <TextBlock Text="B" FontSize="17" FontWeight="Bold"/>
                </ToggleButton>
                <ToggleButton Style="{DynamicResource TextCustomizationButtonStyle}" Margin="8, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" IsChecked="{Binding IsItalic, Mode=TwoWay}" Command="EditingCommands.ToggleItalic">
                    <TextBlock Text="I" Margin="0, 1, 0, 0" FontSize="18" FontStyle="Italic" FontFamily="SimSun" />
                </ToggleButton>
                <ToggleButton Style="{DynamicResource TextCustomizationButtonStyle}" Margin="8, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" IsChecked="{Binding IsUnderline, Mode=TwoWay}" Command="EditingCommands.ToggleUnderline">
                    <TextBlock Text="U" Margin="0, 1, 0, 0" FontSize="16" TextDecorations="Underline" FontFamily="Arial" />
                </ToggleButton>
                <ToggleButton Style="{DynamicResource TextCustomizationButtonStyle}" Margin="8, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" IsChecked="{Binding IsStrikethrough, Mode=TwoWay}" Click="HandleToggleStrikethroughButtonClick">
                    <TextBlock Text="ab" Margin="0, 1, 0, 0" FontSize="18" TextDecorations="Strikethrough" FontFamily="Microsoft YaHei UI Light"/>
                </ToggleButton>
                <ToggleButton Style="{DynamicResource TextCustomizationButtonStyle}" ToolTip="Toggle Bullets" Margin="8, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" IsChecked="{Binding IsBullets, Mode=TwoWay}" Command="EditingCommands.ToggleBullets">
                    <Path Stroke="{DynamicResource Button.Enabled.Foreground}" StrokeThickness="1">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Union">
                                <CombinedGeometry.Geometry1>
                                    <PathGeometry>
                                        <!--Line 1-->
                                        <PathFigure StartPoint="0, 0">
                                            <PolyLineSegment Points="0,1 1,1 1,0"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="4, 0">
                                            <PolyLineSegment Points="4,1 18,1 18,0"/>
                                        </PathFigure>
                                        <!--Line 2-->
                                        <PathFigure StartPoint="0, 4">
                                            <PolyLineSegment Points="0,5 1,5 1,4"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="4, 4">
                                            <PolyLineSegment Points="4,5 18,5 18,4"/>
                                        </PathFigure>
                                        <!--Line 3-->
                                        <PathFigure StartPoint="0, 8">
                                            <PolyLineSegment Points="0,9 1,9 1,8"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="4, 8">
                                            <PolyLineSegment Points="4,9 18,9 18,8"/>
                                        </PathFigure>
                                        <!--Line 4-->
                                        <PathFigure StartPoint="0, 12">
                                            <PolyLineSegment Points="0,13 1,13 1,12"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="4, 12">
                                            <PolyLineSegment Points="4,13 18,13 18,12"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </CombinedGeometry.Geometry1>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>
                </ToggleButton>
                <Button Template="{DynamicResource TextCustomizationButtonTemplate}" Margin="8, 0" Focusable="False" Background="{DynamicResource Button.Enabled.Background}" Foreground="{DynamicResource Button.Enabled.Foreground}" BorderBrush="{DynamicResource Button.Enabled.Border}" Click="HandleInsertImageButtonClick">
                    <Path Stroke="{DynamicResource Button.Enabled.Foreground}" StrokeThickness="1.5">
                        <Path.Data>
                            <PathGeometry>
                                <!--Frame-->
                                <PathFigure StartPoint="0, 0" IsClosed="True">
                                    <PolyLineSegment Points="0,13 18,13 18,0"/>
                                </PathFigure>
                                <!--Mountain 1-->
                                <PathFigure StartPoint="0, 6" IsClosed="True">
                                    <PolyLineSegment Points="4,3 14,13 0,13"/>
                                </PathFigure>
                                <!--Mountain 2-->
                                <PathFigure StartPoint="10,8" IsClosed="True">
                                    <PolyLineSegment Points="12,6 18,12 18,13 14,13"/>
                                </PathFigure>
                                <!--Sun-->
                                <PathFigure StartPoint="15,3" IsClosed="False">
                                    <PolyLineSegment Points="15,4 "/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Button>
            </ToolBar>
        </Grid>
    </Border>
</Window>
