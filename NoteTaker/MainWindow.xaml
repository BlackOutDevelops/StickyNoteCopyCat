<Window x:Class="NoteTaker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NoteTaker"
        mc:Ignorable="d"
        x:Name="NoteTakerWindow" Title="Note Taker" MinHeight="535" MinWidth="355" Height="535" Width="355" WindowStyle="None" AllowsTransparency="True" Background="Transparent" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" 
        Activated="HandleWindowActivated" Deactivated="HandleWindowDeactivated" StateChanged="HandleWindowStateChanged">
    <Window.Resources>
        <SolidColorBrush x:Key="ThemeColor" Color="#FF262626"/>
        <SolidColorBrush x:Key="AccentColor" Color="#FF414141"/>
        <SolidColorBrush x:Key="MainFontColor" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="0, 7, 0, 0">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MaximizeButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="AddButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="7, 0, 0, 0">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ThumbsStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,1"/>
                                <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,1" Margin="1"/>
                                <Border Background="{TemplateBinding Background}" Margin="2"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SearchBarButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <Border x:Name="WindowBorder" Background="{StaticResource ThemeColor}" MouseDown="HandleMouseDownWindow">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition />
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>

            <Grid Grid.RowSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="40*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!-- Top Thumbs -->
                <Thumb x:Name="TopThumbLeft" Grid.Row="0" Grid.Column="0" Height="2" Margin="0, -1, 0, 0" VerticalAlignment="Top" Cursor="SizeNWSE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleTopLeftThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="TopThumbMiddle" Grid.Row="0" Grid.Column="1" Height="2" Margin="0, -1, 0, 0" VerticalAlignment="Top" Cursor="SizeNS" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleTopThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="TopThumbRight" Grid.Row="0" Grid.Column="2" Height="2" Margin="0, -1, 0, 0" VerticalAlignment="Top" Cursor="SizeNESW" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleTopRightThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <!-- Left Thumbs -->
                <Thumb x:Name="LeftThumbTop" Grid.Row="0" Grid.Column="0" Width="2" Margin="-1, 0, 0, 0" HorizontalAlignment="Left" Cursor="SizeNWSE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleTopLeftThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="LeftThumbMiddle" Grid.Row="1" Grid.Column="0" Width="2" Margin="-1, 0, 0, 0" HorizontalAlignment="Left" Cursor="SizeWE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleLeftThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="LeftThumbBottom" Grid.Row="2" Grid.Column="0" Width="2" Margin="-1, 0, 0, 0" HorizontalAlignment="Left" Cursor="SizeNESW" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleBottomLeftThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <!-- Right Thumbs -->
                <Thumb x:Name="RightThumbTop" Grid.Row="0" Grid.Column="2" Width="2" Margin="0, 0, -2, 0" HorizontalAlignment="Right" Cursor="SizeNESW" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleTopRightThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="RightThumbMiddle" Grid.Row="1" Grid.Column="2" Width="2" Margin="0, 0, -2, 0" HorizontalAlignment="Right" Cursor="SizeWE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleRightThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="RightThumbBottom" Grid.Row="2" Grid.Column="2" Width="2" Margin="0, 0, -2, 0" HorizontalAlignment="Right" Cursor="SizeNWSE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleBottomRightThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <!-- Bottom Thumbs -->
                <Thumb x:Name="BottomThumbLeft" Grid.Row="3" Grid.Column="0" Height="2" Margin="0, 1, 0, 0" VerticalAlignment="Bottom" Cursor="SizeNESW" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleBottomLeftThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="BottomThumbMiddle" Grid.Row="3" Grid.Column="1" Height="2" Margin="0, 1, 0, 0" VerticalAlignment="Bottom" Cursor="SizeNS" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleBottomThumbDrag" DragStarted="HandleThumbDragStarted"/>
                <Thumb x:Name="BottomThumbRight" Grid.Row="3" Grid.Column="2" Height="2" Margin="0, 1, 0, 0" VerticalAlignment="Bottom" Cursor="SizeNWSE" Style="{DynamicResource ThumbsStyle}" DragDelta="HandleBottomRightThumbDrag" DragStarted="HandleThumbDragStarted"/>
            </Grid>
            
            <!-- Window Bar -->
            <Border Grid.Row="0" MouseDown="HandleMouseDownRow" Background="{StaticResource ThemeColor}" CornerRadius="7, 7, 0, 0"/>
            <DockPanel>
                <Button x:Name="AddButton" Template="{DynamicResource AddButtonTemplate}" Content="+" Grid.Row="0" Width="40" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" Padding="-7" 
                    VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleAddButtonClick" DockPanel.Dock="Left"/>
                <Button x:Name="CloseButton" Template="{DynamicResource CloseButtonTemplate}" Content="×" Grid.Row="0" Width="40" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" Padding="-7" 
                    VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleCloseButtonClick" DockPanel.Dock="Right"/>
                <Button x:Name="MaximizeButton" Template="{DynamicResource MaximizeButtonTemplate}" Content="□" Grid.Row="0" Width="40"  BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" Padding="-9" 
                    HorizontalAlignment="Right" VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleMaximizeButtonClick" DockPanel.Dock="Right"/>
            </DockPanel>
            
            <!-- Contents -->
            <StackPanel Grid.Row="1" Margin="5, 0, 10, 0">
                <Label Content="Note Taker" FontSize="19" FontWeight="Bold" Foreground="White" Margin="0, -4, 0, 5" />
                <DockPanel Height="32">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="9*"/>
                            <ColumnDefinition x:Name="DeleteColumn" Width="0"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="SearchBox" Grid.Column="0" LostFocus="HandleTextBoxLostFocus" PreviewMouseDown="SetCursorToBeginningHandler" Text="Search..." VerticalContentAlignment="Center" Padding="5, 0" HorizontalAlignment="Stretch" 
                                 FontSize="14" BorderThickness="0" Background="{StaticResource AccentColor}" Margin="5, 0, 0, 0" PreviewTextInput="TextInputHandler" PreviewKeyDown="TextDeleteAndSpaceHandler" Foreground="DarkGray"
                                 PreviewKeyUp="TextDeleteAndSpaceHandler" GotFocus="HandleTextBoxGotFocus" TextWrapping="Wrap" />
                        <Button x:Name="DeleteTextButton" Template="{DynamicResource SearchBarButtonTemplate}" Grid.Column="1" BorderThickness="0" Foreground="WhiteSmoke" Background="{StaticResource AccentColor}" Width="32" Content="×" FontWeight="ExtraLight" FontSize="28" Padding="-5" DockPanel.Dock="Right" VerticalContentAlignment="Top" HorizontalAlignment="Right" Visibility="Hidden" Click="HandleDeleteButtonClicked"/>
                        <Button Template="{DynamicResource SearchBarButtonTemplate}" Grid.Column="2" BorderThickness="0" Foreground="WhiteSmoke" Background="{StaticResource AccentColor}" Width="32" FontSize="15" DockPanel.Dock="Right" HorizontalAlignment="Right">
                            <Canvas Margin="5, 3, 0, 0">
                                <Ellipse x:Name="MagnifyingGlassTop" Width="10" Height="10" Fill="Transparent" StrokeThickness="1" Stroke="DarkGray" Canvas.Top="-8" Canvas.Left="-8" />
                                <Line x:Name="MagnifyingGlassHandle" Stroke="DarkGray" StrokeThickness="1" X1="0" X2="5" Y1="0" Y2="5" Canvas.Top="0" Canvas.Left="0" />
                            </Canvas>
                        </Button>
                    </Grid>
                </DockPanel>
            </StackPanel>
            <StackPanel Name="Content" Grid.Row="2" Margin="10, 3, 10, 1">
                
            </StackPanel>
        </Grid>
    </Border>
</Window>
