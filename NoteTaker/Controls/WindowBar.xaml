<UserControl x:Class="NoteTaker.Controls.WindowBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             LayoutUpdated="HandleLayoutUpdated">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ThemeColor" Color="#FF262626"/>
        <SolidColorBrush x:Key="AccentColor" Color="#FF414141"/>
        <SolidColorBrush x:Key="MainFontColor" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#8F444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF444444"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="0, 7, 0, 0">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MaximizeButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="AddButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="7, 0, 0, 0">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>
        <Border MouseDown="HandleMouseDownRow" Background="{StaticResource ThemeColor}" CornerRadius="7, 7, 0, 0"/>
        <DockPanel>
            <Button x:Name="BackButton" Template="{DynamicResource AddButtonTemplate}" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" 
                    VerticalContentAlignment="Center" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleBackButtonClick" DockPanel.Dock="Left"
                    Visibility="Collapsed">
                <Path Stroke="{StaticResource MainFontColor}" StrokeThickness="1" Width="30" Height="30">
                    <Path.Data>
                        <PathGeometry Figures="M18,15 0,15 M8,8 0,15 8,22">
                            <PathGeometry.Transform>
                                <TranslateTransform X="6"/>
                            </PathGeometry.Transform>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Button>
            <Label x:Name="SettingsLabel" Content="Settings" Foreground="{StaticResource MainFontColor}" FontSize="16" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                   Visibility="Collapsed"/>
            <Button x:Name="AddButton" Template="{DynamicResource AddButtonTemplate}" Content="+" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" 
                    VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleAddButtonClick" DockPanel.Dock="Left"/>
            <Button x:Name="CloseButton" Template="{DynamicResource CloseButtonTemplate}" Content="×" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33"  
                    VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleCloseButtonClick" DockPanel.Dock="Right"/>
            <Button x:Name="MaximizeButton" Template="{DynamicResource MaximizeButtonTemplate}" Content="□" BorderThickness="0" Background="{StaticResource ThemeColor}" FontSize="33" 
                    HorizontalAlignment="Right" VerticalContentAlignment="Top" Foreground="{StaticResource MainFontColor}" FontWeight="UltraLight" Click="HandleMaximizeButtonClick" DockPanel.Dock="Right"/>
            <Button x:Name="SettingsButton" Template="{DynamicResource MaximizeButtonTemplate}" BorderThickness="0" Background="{StaticResource ThemeColor}" HorizontalAlignment="Right"
                    VerticalContentAlignment="Center" Foreground="{StaticResource MainFontColor}" Click="HandleSettingsButtonClick" DockPanel.Dock="Right">
                <Button.Content>
                    <Path Stroke="{StaticResource MainFontColor}" StrokeThickness="1" Width="30" Height="30">
                        <Path.Data>
                            <GeometryGroup>
                                <EllipseGeometry RadiusX="3" RadiusY="3" Center="12.5,12.5"/>
                                <!-- Gear Edges -->
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <TranslateTransform X="10.5" Y="7"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="45"/>
                                            <TranslateTransform X="15" Y="6.8"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="18" Y="9.9"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="135"/>
                                            <TranslateTransform X="18" Y="14.5"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="15" Y="17.9"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="225"/>
                                            <TranslateTransform X="10.5" Y="18"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="270"/>
                                            <TranslateTransform X="7" Y="15"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                                <PathGeometry  Figures="M0,0 S1,-1.5 1,-3 L4,-3 S4,-1.5 5,0">
                                    <PathGeometry.Transform>
                                        <TransformGroup>
                                            <RotateTransform Angle="315"/>
                                            <TranslateTransform X="7.3" Y="10.5"/>
                                        </TransformGroup>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>
                </Button.Content>
            </Button>
        </DockPanel>
    </Grid>
</UserControl>
